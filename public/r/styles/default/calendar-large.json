{
  "name": "calendar-large",
  "type": "registry:example",
  "registryDependencies": [
    "calendar"
  ],
  "files": [
    {
      "path": "docs/calendar/calendar-large.tsx",
      "content": "'use client';\n\nimport React, { useState, useMemo } from 'react';\nimport {\n  Widget,\n  WidgetContent,\n  WidgetHeader,\n  WidgetTitle,\n} from '../../wigggle/widget';\nimport {\n  ChevronLeft,\n  ChevronRight,\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Separator } from '@/components/ui/separator';\n\nconst MONTH_NAMES = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\nconst DAYS = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n\nexport default function CalendarDemo() {\n  const [date, setDate] = useState(new Date());\n  const year = date.getFullYear();\n  const month = date.getMonth();\n\n  const calendarDays = useMemo(() => {\n    const daysInMonth = new Date(\n      year,\n      month + 1,\n      0\n    ).getDate();\n    const firstDayOfMonth = new Date(\n      year,\n      month,\n      1\n    ).getDay();\n    return Array(firstDayOfMonth)\n      .fill(null)\n      .concat(\n        Array.from(\n          { length: daysInMonth },\n          (_, i) => i + 1\n        )\n      );\n  }, [year, month]);\n\n  const changeMonth = (increment: number) =>\n    setDate((prevDate) => {\n      const newDate = new Date(prevDate);\n      newDate.setMonth(\n        newDate.getMonth() + increment\n      );\n      return newDate;\n    });\n\n  const isToday = (day: number | null) => {\n    if (day === null) return false;\n    const today = new Date();\n    return (\n      day === today.getDate() &&\n      month === today.getMonth() &&\n      year === today.getFullYear()\n    );\n  };\n\n  return (\n    <Widget size=\"large\">\n      <WidgetHeader className=\"flex-center pb-2\">\n        <Button\n          variant=\"ghost\"\n          size=\"icon\"\n          className=\"size-6 p-0\"\n          onClick={() => changeMonth(-1)}\n        >\n          <ChevronLeft className=\"size-6\" />\n        </Button>\n        <WidgetTitle className=\"text-lg\">\n          {MONTH_NAMES[month]} {year}\n        </WidgetTitle>\n        <Button\n          variant=\"ghost\"\n          size=\"icon\"\n          className=\"size-6 p-0\"\n          onClick={() => changeMonth(1)}\n        >\n          <ChevronRight className=\"size-6\" />\n        </Button>\n      </WidgetHeader>\n      <Separator className=\"h-0.5 rounded-full\" />\n      <WidgetContent>\n        <div className=\"mt-6 size-full grid grid-cols-7 gap-1 text-center\">\n          {DAYS.map((day) => (\n            <div key={day} className=\"text-base\">\n              {day}\n            </div>\n          ))}\n          {calendarDays.map((day, index) => (\n            <div\n              key={index}\n              className=\"text-sm text-muted-foreground\"\n            >\n              {day && isToday(day) ? (\n                <span className=\"py-2 px-2.5 w-max mx-auto rounded-full bg-primary text-background\">\n                  {day}\n                </span>\n              ) : (\n                day\n              )}\n            </div>\n          ))}\n        </div>\n      </WidgetContent>\n    </Widget>\n  );\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}