{
  "name": "widget",
  "type": "registry:wigggle",
  "files": [
    {
      "path": "wigggle/widget.tsx",
      "content": "import * as React from 'react';\nimport {\n  cva,\n  type VariantProps,\n} from 'class-variance-authority';\nimport { cn } from '@/lib/utils';\n\nconst widgetVariants = cva(\n  'relative flex flex-col border-2 whitespace-nowrap shadow-md rounded-3xl',\n  {\n    variants: {\n      size: {\n        square: 'w-48 h-48',\n        rectangle: 'w-80 md:w-96 h-48',\n        large: 'w-80 h-80 md:w-96 md:h-96',\n      },\n      design: {\n        default: 'p-6',\n        mumbai: 'p-4',\n      },\n      variant: {\n        default: 'bg-background text-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground',\n      },\n    },\n    defaultVariants: {\n      size: 'square',\n      design: 'default',\n      variant: 'default',\n    },\n  }\n);\n\nexport interface WidgetProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof widgetVariants> {\n  asChild?: boolean;\n}\n\nconst Widget = React.forwardRef<\n  HTMLDivElement,\n  WidgetProps\n>(\n  (\n    {\n      className,\n      size,\n      design,\n      variant,\n      ...props\n    },\n    ref\n  ) => (\n    <div\n      ref={ref}\n      className={cn(\n        widgetVariants({\n          size,\n          design,\n          variant,\n          className,\n        })\n      )}\n      {...props}\n    />\n  )\n);\nWidget.displayName = 'Widget';\n\nconst WidgetHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      'flex-none flex justify-between items-start text-semibold',\n      className\n    )}\n    {...props}\n  />\n));\nWidgetHeader.displayName = 'WidgetHeader';\n\nconst WidgetTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\n      'font-semibold leading-none tracking-tight',\n      className\n    )}\n    {...props}\n  />\n));\nWidgetTitle.displayName = 'WidgetTitle';\n\nconst WidgetContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      'flex-1 flex justify-center items-center',\n      className\n    )}\n    {...props}\n  />\n));\nWidgetContent.displayName = 'WidgetContent';\n\nconst WidgetFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      'flex-none flex justify-between items-center',\n      className\n    )}\n    {...props}\n  />\n));\nWidgetFooter.displayName = 'WidgetFooter';\n\nexport {\n  Widget,\n  WidgetHeader,\n  WidgetTitle,\n  WidgetContent,\n  WidgetFooter,\n  widgetVariants,\n};\n",
      "type": "registry:wigggle",
      "target": ""
    }
  ]
}